# Generated by Django 2.1.7 on 2019-07-24 02:40

from django.conf import settings
import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('articles', '0010_auto_20190723_1210'),
    ]

    operations = [
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='URL')),
                ('rating', models.PositiveIntegerField(default=0, verbose_name='rating')),
            ],
        ),
        migrations.CreateModel(
            name='ResourceUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_like', models.BooleanField(default=False, verbose_name='like')),
            ],
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('resource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='articles.Resource')),
                ('title', models.CharField(blank=True, default=None, max_length=300, verbose_name='title')),
                ('description', models.TextField(blank=True, default=None, verbose_name='description')),
                ('image', models.URLField(blank=True, default=None, verbose_name='image_url')),
            ],
            bases=('articles.resource',),
        ),
        migrations.CreateModel(
            name='GitHub',
            fields=[
                ('resource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='articles.Resource')),
                ('title', models.CharField(blank=True, max_length=300, verbose_name='title')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('n_stars', models.PositiveIntegerField(blank=True, default=0, verbose_name='stars')),
                ('language', models.CharField(blank=True, default='', max_length=100, verbose_name='language')),
                ('framework', models.CharField(blank=True, default='', max_length=100, verbose_name='framework')),
                ('languages', django.contrib.postgres.fields.hstore.HStoreField(blank=True, default=dict)),
                ('is_official', models.BooleanField(blank=True, default=False, verbose_name='is_official')),
                ('topics', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            bases=('articles.resource',),
        ),
        migrations.AddField(
            model_name='resourceuser',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='articles.Resource'),
        ),
        migrations.AddField(
            model_name='resourceuser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='resource',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='articles.Article'),
        ),
        migrations.AddField(
            model_name='resource',
            name='users',
            field=models.ManyToManyField(related_name='resources', through='articles.ResourceUser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='resource',
            name='who_added',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='added_resource', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='resourceuser',
            unique_together={('resource', 'user')},
        ),
    ]
