# Generated by Django 2.1.7 on 2019-06-19 09:54

import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('articles', '0005_auto_20190612_1422'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPostInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=300, null=True, verbose_name='title')),
                ('description', models.TextField(default=None, null=True, verbose_name='description')),
                ('image', models.URLField(default=None, null=True, verbose_name='image_url')),
            ],
        ),
        migrations.CreateModel(
            name='GitHubInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name='title')),
                ('description', models.TextField(default='', verbose_name='description')),
                ('n_stars', models.PositiveIntegerField(default=0, verbose_name='stars')),
                ('language', models.CharField(default='', max_length=100, verbose_name='language')),
                ('framework', models.CharField(default='', max_length=100, verbose_name='language')),
                ('languages', django.contrib.postgres.fields.hstore.HStoreField(default=dict)),
                ('is_official', models.BooleanField(default=False, verbose_name='is_official')),
            ],
        ),
        migrations.RemoveField(
            model_name='blogpost',
            name='title',
        ),
        migrations.RemoveField(
            model_name='githubrepository',
            name='description',
        ),
        migrations.RemoveField(
            model_name='githubrepository',
            name='framework',
        ),
        migrations.RemoveField(
            model_name='githubrepository',
            name='is_official',
        ),
        migrations.RemoveField(
            model_name='githubrepository',
            name='language',
        ),
        migrations.RemoveField(
            model_name='githubrepository',
            name='languages',
        ),
        migrations.RemoveField(
            model_name='githubrepository',
            name='n_stars',
        ),
        migrations.RemoveField(
            model_name='githubrepository',
            name='title',
        ),
        migrations.RemoveField(
            model_name='githubrepository',
            name='topics',
        ),
        migrations.AddField(
            model_name='githubinfo',
            name='repo',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='info', to='articles.GitHubRepository'),
        ),
        migrations.AddField(
            model_name='githubinfo',
            name='topics',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='blogpostinfo',
            name='blog_post',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='info', to='articles.BlogPost'),
        ),
    ]
